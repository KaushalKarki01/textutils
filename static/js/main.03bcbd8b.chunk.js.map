{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","htmlFor","value","color","onChange","colorChange","onClick","toggleMode","role","aria-checked","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","mycolor","heading","rows","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","split","length","replace","trim","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","home","App","setMode","_useState3","_useState4","setAlert","_useState5","_useState6","setColor","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.03bcbd8b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  About\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n          \r\n            <label htmlFor=\"exampleColorInput\" className=\"form-label\">Color picker</label>\r\n            <input type=\"color\" className=\"form-control form-control-color mx-3\" id=\"exampleColorInput\" value={`${props.color}`} title=\"Choose your color\" onChange={props.colorChange} />\r\n\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                onClick={props.toggleMode}\r\n                type=\"checkbox\"\r\n                role=\"switch\" aria-checked=\"true\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                Enable {props.mode==='light'?'dark':'light'} Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  home: \"home\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('converted to uppercase','success');\r\n  };\r\n\r\n  const handleLoClick =()=>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert('converted to lowercase','success');\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:props.mycolor}} >\r\n        <h1 className=\"mb-4\">{props.heading}</h1>\r\n       \r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'black':'white',color:props.mode==='dark'?'white':'black'}}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick} style={{backgroundColor:props.mycolor}}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick} style={{backgroundColor:props.mycolor}}>\r\n          Convert to Lowercase\r\n        </button>\r\n      \r\n      </div>\r\n\r\n      <div className=\"container my-4\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text===\"\"?0:text.split(\" \").length} words and {text.replace(/ /g,\"\").length} characters</p>\r\n        \r\n        <p>{0.008 * text.trim().length} minutes required to read</p> \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\"\r\n    >\r\n      {capitalize(props.alert.type)} : {props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React,{useState} from \"react\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {\n  const [mode,setMode] = useState('light');\n  \n  const [alert, setAlert] = useState(null);\n\n  const [color, setColor] = useState('#6C0BA9');\n\n  const colorChange=(event)=>{\n   \n    setColor(event.target.value);\n    \n  }\n\n  // const toggleColor=()=>{\n  //  let newColor = \n   \n  // }\n \n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000)\n  }\n\n  const toggleMode=()=>{ \n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='black';\n     showAlert('Dark mode has been enabled', 'success')\n     document.title='TextUtils- Dark Mode';\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n     showAlert('Light mode has been enabled', 'success')\n     document.title='Textutils- Light Mode';\n    }\n  }\n  return (\n    \n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} color={color}  colorChange={colorChange}/>\n      <Alert alert={alert}/>\n      <div className=\"container\">\n       {/* <Routes>\n          <Route exact path=\"/about\" element={<About/>} >\n          </Route>\n          \n          <Route exact path=\"/\" element={}> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the next to analyze\" mode={mode} mycolor={color}/>\n          \n          {/* </Route>\n         </Routes> */}\n        \n      \n      </div>\n       {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}